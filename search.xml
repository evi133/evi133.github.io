<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Linux下Docker部署LAMP踩的小坑</title>
    <url>/2022/11/19/Linux%E4%B8%8BDocker%E9%83%A8%E7%BD%B2LAMP%E8%B8%A9%E7%9A%84%E5%B0%8F%E5%9D%91/</url>
    <content><![CDATA[<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h2><p>安装了Docker的Linux系统</p>
<h2 id="2-获取ubuntu基础镜像"><a href="#2-获取ubuntu基础镜像" class="headerlink" title="2.获取ubuntu基础镜像"></a>2.获取ubuntu基础镜像</h2><p>拉一个18.04版本的ubuntu镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br></pre></td></tr></table></figure>

<p>进入容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it ubuntu:18.04 /bin/bash</span><br></pre></td></tr></table></figure>

<p>换源,这里我选择的是阿里云的源,因为镜像中没有安装vim,所以用echo写入内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak	#备份源文件</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse&quot; &gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br><span class="line">echo &quot;deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse&quot; &gt;&gt;/etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>更新源列表</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure>

<h2 id="3-安装依赖"><a href="#3-安装依赖" class="headerlink" title="3.安装依赖"></a>3.安装依赖</h2><h3 id="3-1-Mysql"><a href="#3-1-Mysql" class="headerlink" title="3.1 Mysql"></a>3.1 Mysql</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install mysql-server</span><br></pre></td></tr></table></figure>

<p><strong>坑:</strong></p>
<p>安装完成后启动mysql报错</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 2002 (HY000): Can&#x27;t connect to local MySQL server through socket &#x27;/var/run/mysqld/mysqld.sock&#x27; (2)</span><br></pre></td></tr></table></figure>

<p><strong>解决方案:</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /var/run/mysqld</span><br><span class="line">chown mysql /var/run/mysqld/</span><br><span class="line">service mysql restart</span><br><span class="line">mysql	//进入mysql</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;; //设置密码</span><br></pre></td></tr></table></figure>

<p>然后进入mysql,即可正常连接</p>
<h3 id="3-2-Apache"><a href="#3-2-Apache" class="headerlink" title="3.2 Apache"></a>3.2 Apache</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install apache2</span><br></pre></td></tr></table></figure>

<p><strong>坑</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Sat Nov 19 06:52:00.409930 2022] [core:warn] [pid 2080] AH00111: Config variable $&#123;APACHE_RUN_DIR&#125; is not defined</span><br><span class="line">apache2: Syntax error on line 80 of /etc/apache2/apache2.conf: DefaultRuntimeDir must be a valid directory, absolute or relative to ServerRoot</span><br></pre></td></tr></table></figure>

<p><strong>解决方案:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/run/apache2</span><br><span class="line">service apache2 start</span><br></pre></td></tr></table></figure>

<h3 id="3-3-PHP"><a href="#3-3-PHP" class="headerlink" title="3.3 PHP"></a>3.3 PHP</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install php</span><br><span class="line">apt-get install php-mysql</span><br><span class="line">apt-get install libapache2-mod-php</span><br></pre></td></tr></table></figure>

<p>安装完后查看版本如下,即表示安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@447e37cf48ee:/etc/apache2/sites-enabled# php -version</span><br><span class="line">PHP 7.2.24-0ubuntu0.18.04.15 (cli) (built: Nov  2 2022 09:09:52) ( NTS )</span><br><span class="line">Copyright (c) 1997-2018 The PHP Group</span><br><span class="line">Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies</span><br><span class="line">    with Zend OPcache v7.2.24-0ubuntu0.18.04.15, Copyright (c) 1999-2018, by Zend Technologies</span><br></pre></td></tr></table></figure>

<p><strong>坑</strong></p>
<p>在&#x2F;var&#x2F;www&#x2F;html下创建一个phpinfo文件,打开显示空白</p>
<p><strong>解决方案:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/php/7.2/apache2/php.ini</span><br></pre></td></tr></table></figure>

<p>首先看下<strong>disable_functions</strong>是否有phpinfo,再将<strong>short_open_tag &#x3D; Off</strong>取消注释并改为<strong>short_open_tag &#x3D; On</strong></p>
<h2 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h2><p>此时LAMP环境就搭好了,我们可以在创建一个php文件看是否能解析</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /var/www/html</span><br><span class="line">vim test.php</span><br></pre></td></tr></table></figure>

<p>文件内容</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/Linux%E4%B8%8BDocker%E9%83%A8%E7%BD%B2LAMP%E8%B8%A9%E7%9A%84%E5%B0%8F%E5%9D%91/phpinfo.png" alt="phpinfo"></p>
<p>成功解析</p>
]]></content>
      <tags>
        <tag>Docker</tag>
        <tag>LAMP</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次js加密算法逆向</title>
    <url>/2022/11/22/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/</url>
    <content><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>随着企业对安全越来越重视,前端加密也称为了企业防护的重要手段,以下过程仅记录学习过程</p>
<h1 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h1><h2 id="2-1-加密"><a href="#2-1-加密" class="headerlink" title="2.1 加密"></a>2.1 加密</h2><p>就拿登录功能为例,浏览器抓一下登录的包</p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122195844875.png" alt="image-20221122195844875"></p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122195913886.png" alt="image-20221122195913886"></p>
<p>请求包和返回包都经过了加密,要想继续渗透下去,就得找一下加解密的方法,才可以自己构造数据包</p>
<p>全局搜索<strong>secJson</strong></p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122200100713.png" alt="image-20221122200100713"></p>
<p>只有这一个js文件中存在,跟进去再搜一下<strong>secJson</strong></p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122202103879.png" alt="image-20221122202103879"></p>
<p>一共有三处,很明显可以得知t即为加密过后的参数,在可疑的地方加上断点重新请求</p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122202536553.png" alt="image-20221122202536553"></p>
<p>可以看到e为原始数据包的内容,原数据包的内容为</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;mobile&quot;</span><span class="punctuation">:</span><span class="string">&quot;18888888888&quot;</span><span class="punctuation">,</span><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;86e2rL/E5dA4KAJuLa3wPw==&quot;</span><span class="punctuation">,</span><span class="attr">&quot;zoneCode&quot;</span><span class="punctuation">:</span><span class="string">&quot;86&quot;</span><span class="punctuation">,</span><span class="attr">&quot;captchaId&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">,</span><span class="attr">&quot;verificationCode&quot;</span><span class="punctuation">:</span><span class="string">&quot;&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>密码也是加密的,我们先不管,主要是解密整个数据包,t为加密过后的数据包,看内容,数据包是经过了两次处理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> t = <span class="title class_">Object</span>(y.<span class="property">b</span>)(e);</span><br><span class="line"><span class="keyword">return</span> t = <span class="title function_">u</span>(t = t.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>一次是由y.b处理,一次是由u处理,我们首先跟进y.b</p>
<p>找到y.b的内容,自己设置一个函数名,直接放js里面调试一下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">e</span>)&#123; 			<span class="comment">//e为原始数据包</span></span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="built_in">encodeURIComponent</span>(e), o = [], i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = t.<span class="title function_">charAt</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;%&quot;</span> === r) &#123;</span><br><span class="line">                <span class="keyword">var</span> a = t.<span class="title function_">charAt</span>(i + <span class="number">1</span>) + t.<span class="title function_">charAt</span>(i + <span class="number">2</span>)</span><br><span class="line">                  , n = <span class="built_in">parseInt</span>(a, <span class="number">16</span>);</span><br><span class="line">                o.<span class="title function_">push</span>(n),</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                o.<span class="title function_">push</span>(r.<span class="title function_">charCodeAt</span>(<span class="number">0</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> o.<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">        )).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;(e); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        o = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        i = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        a = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        n = o &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        l = (<span class="number">3</span> &amp; o) &lt;&lt; <span class="number">4</span> | i &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        b = (<span class="number">15</span> &amp; i) &lt;&lt; <span class="number">2</span> | a &gt;&gt; <span class="number">6</span>,</span><br><span class="line">        s = <span class="number">63</span> &amp; a,</span><br><span class="line">        <span class="built_in">isNaN</span>(i) ? b = s = <span class="number">64</span> : <span class="built_in">isNaN</span>(a) &amp;&amp; (s = <span class="number">64</span>),</span><br><span class="line">        t = t + r.<span class="title function_">charAt</span>(n) + r.<span class="title function_">charAt</span>(l) + r.<span class="title function_">charAt</span>(b) + r.<span class="title function_">charAt</span>(s);</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>没有错误就可以找下一个函数u,将内容复制到js里面调试一下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="string">&quot;&quot;</span></span><br><span class="line">      , r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">length</span> % <span class="number">2</span> ? (r = (e.<span class="property">length</span> + <span class="number">1</span>) / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">1</span>, r),</span><br><span class="line">    o = e.<span class="title function_">substring</span>(r),</span><br><span class="line">    i = e.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>) + o + t) : (r = e.<span class="property">length</span> / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">0</span>, r),</span><br><span class="line">    i = (o = e.<span class="title function_">substring</span>(r)) + t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后我们传入参数e,根据原来的处理方法处理,最后赋值给encryptResult,当只有这两个函数时,经调试会报出错误</p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122204449873.png" alt="image-20221122204449873"></p>
<p>r未定义,再从刚刚两个函数的位置上下翻一下r的值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br></pre></td></tr></table></figure>

<p>最后代码为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="built_in">encodeURIComponent</span>(e), o = [], i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = t.<span class="title function_">charAt</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;%&quot;</span> === r) &#123;</span><br><span class="line">                <span class="keyword">var</span> a = t.<span class="title function_">charAt</span>(i + <span class="number">1</span>) + t.<span class="title function_">charAt</span>(i + <span class="number">2</span>)</span><br><span class="line">                  , n = <span class="built_in">parseInt</span>(a, <span class="number">16</span>);</span><br><span class="line">                o.<span class="title function_">push</span>(n),</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                o.<span class="title function_">push</span>(r.<span class="title function_">charCodeAt</span>(<span class="number">0</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> o.<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">        )).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;(e); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        o = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        i = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        a = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        n = o &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        l = (<span class="number">3</span> &amp; o) &lt;&lt; <span class="number">4</span> | i &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        b = (<span class="number">15</span> &amp; i) &lt;&lt; <span class="number">2</span> | a &gt;&gt; <span class="number">6</span>,</span><br><span class="line">        s = <span class="number">63</span> &amp; a,</span><br><span class="line">        <span class="built_in">isNaN</span>(i) ? b = s = <span class="number">64</span> : <span class="built_in">isNaN</span>(a) &amp;&amp; (s = <span class="number">64</span>),</span><br><span class="line">        t = t + r.<span class="title function_">charAt</span>(n) + r.<span class="title function_">charAt</span>(l) + r.<span class="title function_">charAt</span>(b) + r.<span class="title function_">charAt</span>(s);</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="string">&quot;&quot;</span></span><br><span class="line">      , r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">length</span> % <span class="number">2</span> ? (r = (e.<span class="property">length</span> + <span class="number">1</span>) / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">1</span>, r),</span><br><span class="line">    o = e.<span class="title function_">substring</span>(r),</span><br><span class="line">    i = e.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>) + o + t) : (r = e.<span class="property">length</span> / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">0</span>, r),</span><br><span class="line">    i = (o = e.<span class="title function_">substring</span>(r)) + t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> e = <span class="string">&quot;&#123;\&quot;mobile\&quot;:\&quot;18888888888\&quot;,\&quot;password\&quot;:\&quot;86e2rL/E5dA4KAJuLa3wPw==\&quot;,\&quot;zoneCode\&quot;:\&quot;86\&quot;,\&quot;captchaId\&quot;:\&quot;\&quot;,\&quot;verificationCode\&quot;:\&quot;\&quot;&#125;&quot;</span></span><br><span class="line"><span class="keyword">var</span> t = <span class="title function_">encrypt</span>(e)</span><br><span class="line">t = <span class="title function_">u</span>(t = t.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(t)</span><br></pre></td></tr></table></figure>

<p>运行一下得到加密结果</p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122204914285.png" alt="image-20221122204914285"></p>
<p>和请求包中的数据一样,证明加密方法是正确的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">secJson</span><br><span class="line">: </span><br><span class="line">&quot;zdQd3MhxUdKF0S0EEZ1U0LMJnMlZDOiojIkJ3b3N3chBnIsICO4gDO4gDO4gDOxIiOiUGbpJ2btJye==QfiIiOiUGZvNkbvlGdhNWamlmclZnIsIiI6ICZJFGajRHchNmIsIiN4IiOiUGZvNUZu9meiwiI90&quot;</span><br></pre></td></tr></table></figure>

<h2 id="2-2-解密"><a href="#2-2-解密" class="headerlink" title="2.2 解密"></a>2.2 解密</h2><p>返回包也为加密的,先看一下返回包的特征,和请求包一样的格式,同样是找<strong>secJson</strong>,刚刚有三个,接下的的两个我们也找可疑的地方下断点,如果一眼看不出来可以多下断点,慢慢调</p>
<p><img src="/../images/%E8%AE%B0%E4%B8%80%E6%AC%A1js%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E9%80%86%E5%90%91/image-20221122205538326.png" alt="image-20221122205538326"></p>
<p>e的值和返回包的值一样,基本可以确认这是解密返回包的代码,解密也是通过两次处理获得最后的数据</p>
<p>u处理一次,y.a处理一次,跟进两个函数复制出来,u我们之前已经有了,只复制一下y.a即可,给函数重命名之后放js里</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">decrypt</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = e.<span class="title function_">replace</span>(<span class="regexp">/[^A-Za-z0-9+/=]/g</span>, <span class="string">&quot;&quot;</span>); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        n = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        l = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        b = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        s = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        o = n &lt;&lt; <span class="number">2</span> | l &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        i = (<span class="number">15</span> &amp; l) &lt;&lt; <span class="number">4</span> | b &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        a = (<span class="number">3</span> &amp; b) &lt;&lt; <span class="number">6</span> | s,</span><br><span class="line">        t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(o),</span><br><span class="line">        <span class="number">64</span> != b &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)),</span><br><span class="line">        <span class="number">64</span> != s &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(a));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="title function_">charCodeAt</span>(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        )), o = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++)</span><br><span class="line">            o += <span class="string">&quot;%&quot;</span> + t[i].<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(o)</span><br><span class="line">    &#125;(t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>传入返回包执行一下,完整代码为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="string">&quot;&quot;</span></span><br><span class="line">      , r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">length</span> % <span class="number">2</span> ? (r = (e.<span class="property">length</span> + <span class="number">1</span>) / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">1</span>, r),</span><br><span class="line">    o = e.<span class="title function_">substring</span>(r),</span><br><span class="line">    i = e.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>) + o + t) : (r = e.<span class="property">length</span> / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">0</span>, r),</span><br><span class="line">    i = (o = e.<span class="title function_">substring</span>(r)) + t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decrypt</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = e.<span class="title function_">replace</span>(<span class="regexp">/[^A-Za-z0-9+/=]/g</span>, <span class="string">&quot;&quot;</span>); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        n = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        l = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        b = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        s = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        o = n &lt;&lt; <span class="number">2</span> | l &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        i = (<span class="number">15</span> &amp; l) &lt;&lt; <span class="number">4</span> | b &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        a = (<span class="number">3</span> &amp; b) &lt;&lt; <span class="number">6</span> | s,</span><br><span class="line">        t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(o),</span><br><span class="line">        <span class="number">64</span> != b &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)),</span><br><span class="line">        <span class="number">64</span> != s &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(a));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="title function_">charCodeAt</span>(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        )), o = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++)</span><br><span class="line">            o += <span class="string">&quot;%&quot;</span> + t[i].<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(o)</span><br><span class="line">    &#125;(t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;kVmcv52ZJtlI6ICZJV2YhJHdiwiIv+K6ZSZ6BC65G+a5Wio53+Y56yp5Lmo5iojInNXTlNnbvB3clJnIsIyMxATMyIiOiUGZvNUZz52bwNXZyJye9xGb15mOic2cNJ3byJXZiwCbsVnb6ISY0FGZiwiI5EDMlRDO1cjMwMjN4AjYiBDZkRjM5UWM0YjNlNWNjNjI6ICZJR3clVXclJnIsISXlNWYyRFI&quot;</span></span><br><span class="line"><span class="keyword">var</span> o = <span class="title function_">u</span>(a)</span><br><span class="line">o = <span class="title function_">decrypt</span>(o.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span><br></pre></td></tr></table></figure>

<p>执行得到结果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&quot;responseCode&quot;</span>:<span class="string">&quot;21013&quot;</span>,<span class="string">&quot;responseMsg&quot;</span>:<span class="string">&quot;手机号或密码错误&quot;</span>,<span class="string">&quot;traceId&quot;</span>:<span class="string">&quot;[Ignored Trace]&quot;</span>,<span class="string">&quot;requestId&quot;</span>:<span class="string">&quot;3c5ce6641e924dd0bb0863027584e019&quot;</span>,<span class="string">&quot;data&quot;</span>:<span class="literal">null</span>,<span class="string">&quot;errorMsg&quot;</span>:<span class="literal">null</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-3-完整代码"><a href="#2-3-完整代码" class="headerlink" title="2.3 完整代码"></a>2.3 完整代码</h2><p>将加解密放在一起,完整代码为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> r = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="built_in">encodeURIComponent</span>(e), o = [], i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">var</span> r = t.<span class="title function_">charAt</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;%&quot;</span> === r) &#123;</span><br><span class="line">                <span class="keyword">var</span> a = t.<span class="title function_">charAt</span>(i + <span class="number">1</span>) + t.<span class="title function_">charAt</span>(i + <span class="number">2</span>)</span><br><span class="line">                  , n = <span class="built_in">parseInt</span>(a, <span class="number">16</span>);</span><br><span class="line">                o.<span class="title function_">push</span>(n),</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">                o.<span class="title function_">push</span>(r.<span class="title function_">charCodeAt</span>(<span class="number">0</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> o.<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(e)</span><br><span class="line">        &#125;</span><br><span class="line">        )).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;(e); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        o = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        i = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        a = e.<span class="title function_">charCodeAt</span>(c++),</span><br><span class="line">        n = o &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        l = (<span class="number">3</span> &amp; o) &lt;&lt; <span class="number">4</span> | i &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        b = (<span class="number">15</span> &amp; i) &lt;&lt; <span class="number">2</span> | a &gt;&gt; <span class="number">6</span>,</span><br><span class="line">        s = <span class="number">63</span> &amp; a,</span><br><span class="line">        <span class="built_in">isNaN</span>(i) ? b = s = <span class="number">64</span> : <span class="built_in">isNaN</span>(a) &amp;&amp; (s = <span class="number">64</span>),</span><br><span class="line">        t = t + r.<span class="title function_">charAt</span>(n) + r.<span class="title function_">charAt</span>(l) + r.<span class="title function_">charAt</span>(b) + r.<span class="title function_">charAt</span>(s);</span><br><span class="line">    <span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line">;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">u</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="string">&quot;&quot;</span></span><br><span class="line">      , r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">length</span> % <span class="number">2</span> ? (r = (e.<span class="property">length</span> + <span class="number">1</span>) / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">1</span>, r),</span><br><span class="line">    o = e.<span class="title function_">substring</span>(r),</span><br><span class="line">    i = e.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>) + o + t) : (r = e.<span class="property">length</span> / <span class="number">2</span>,</span><br><span class="line">    t = e.<span class="title function_">substring</span>(<span class="number">0</span>, r),</span><br><span class="line">    i = (o = e.<span class="title function_">substring</span>(r)) + t),</span><br><span class="line">    i</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decrypt</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> t = <span class="string">&quot;&quot;</span></span><br><span class="line">      , o = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , i = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , a = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , n = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , l = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , b = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">      , c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = e.<span class="title function_">replace</span>(<span class="regexp">/[^A-Za-z0-9+/=]/g</span>, <span class="string">&quot;&quot;</span>); c &lt; e.<span class="property">length</span>; )</span><br><span class="line">        n = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        l = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        b = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        s = r.<span class="title function_">indexOf</span>(e.<span class="title function_">charAt</span>(c++)),</span><br><span class="line">        o = n &lt;&lt; <span class="number">2</span> | l &gt;&gt; <span class="number">4</span>,</span><br><span class="line">        i = (<span class="number">15</span> &amp; l) &lt;&lt; <span class="number">4</span> | b &gt;&gt; <span class="number">2</span>,</span><br><span class="line">        a = (<span class="number">3</span> &amp; b) &lt;&lt; <span class="number">6</span> | s,</span><br><span class="line">        t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(o),</span><br><span class="line">        <span class="number">64</span> != b &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(i)),</span><br><span class="line">        <span class="number">64</span> != s &amp;&amp; (t += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(a));</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t = e.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">map</span>((<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.<span class="title function_">charCodeAt</span>(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        )), o = <span class="string">&quot;&quot;</span>, i = <span class="number">0</span>; i &lt; t.<span class="property">length</span>; i++)</span><br><span class="line">            o += <span class="string">&quot;%&quot;</span> + t[i].<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(o)</span><br><span class="line">    &#125;(t)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> e = <span class="string">&quot;&#123;\&quot;mobile\&quot;:\&quot;18888888888\&quot;,\&quot;password\&quot;:\&quot;86e2rL/E5dA4KAJuLa3wPw==\&quot;,\&quot;zoneCode\&quot;:\&quot;86\&quot;,\&quot;captchaId\&quot;:\&quot;\&quot;,\&quot;verificationCode\&quot;:\&quot;\&quot;&#125;&quot;</span></span><br><span class="line"><span class="keyword">var</span> t = <span class="title function_">encrypt</span>(e)</span><br><span class="line">t = <span class="title function_">u</span>(t = t.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(t)</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;kVmcv52ZJtlI6ICZJV2YhJHdiwiIv+K6ZSZ6BC65G+a5Wio53+Y56yp5Lmo5iojInNXTlNnbvB3clJnIsIyMxATMyIiOiUGZvNUZz52bwNXZyJye9xGb15mOic2cNJ3byJXZiwCbsVnb6ISY0FGZiwiI5EDMlRDO1cjMwMjN4AjYiBDZkRjM5UWM0YjNlNWNjNjI6ICZJR3clVXclJnIsISXlNWYyRFI&quot;</span></span><br><span class="line"><span class="keyword">var</span> o = <span class="title function_">u</span>(a)</span><br><span class="line">o = <span class="title function_">decrypt</span>(o.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o)</span><br></pre></td></tr></table></figure>

<h1 id="3-编写Python脚本"><a href="#3-编写Python脚本" class="headerlink" title="3.编写Python脚本"></a>3.编写Python脚本</h1>]]></content>
      <tags>
        <tag>加密</tag>
        <tag>js</tag>
      </tags>
  </entry>
</search>
